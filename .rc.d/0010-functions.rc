#!/usr/bin/rc

###############################
## Debian package management ##
###############################

fn whats { # search for software
  apt-cache search $* | grep --color'='always '^\S\+' | less -R
}

fn update { # update the system
  sudo apt-get update && sudo apt-get upgrade
}

fn gimme { # install software
  update && sudo apt-get install $*
}

fn drop { # remove software
  sudo apt-get remove $* && sudo apt-get autoremove
}

fn makedeb { # build a debian package from source
  dpkg-buildpackage -rfakeroot -uc -b
}

fn howdoi { # print executable files given by a package
  for (f in `{dpkg -L $1}) {
    if (test -x $f && ! test -d $f) {
      echo $f
    }
  }
}

fn about { # print man-pages given by a package
  basename -a `{dpkg -L $1 | grep '^/usr/share/man/.*gz'} | sort
}

#######################
## rc list functions ##
#######################

fn pop { # pop the head from a list
  name=$1
  *=$$name
  popped=$1
  shift
  $name=$*
  echo $popped
}

fn push { # (list x ...) push x onto list
  name=$1 {
    shift
    for (x in $*) {
      $name=($x $$name)
    }
  }
}

fn join { # (list sep) join a list by sep
  sep=$2 {
    *=$$1
    while (true) {
      echo -n $1
      shift
      if (~ $#* 0) {
        break
      } else {
        echo -n $sep
      }
    }
  }
}

#########################
## Shorthand functions ##
#########################

fn cls { # clear ; ls
  clear
  ls
}

fn attach { # attach to an existing tmux session, or create a new one
  tmux attach || tmux
}

fn jmp { # jump into a directory, creating it if needed
  mkdir -p $1 && cd $1
}

###########
## papes ##
###########

fn watchimg { # watch for new files in the current directory, and display them via $*
  while(true) {
    f=`{inotifywait -e create .} {
      clear
      $* $f(3)
    }
  }
}

fn getwalls {
  page=1 {
    if (~ $#* 2) {
      page=$2
    }

    for (i in `{wh $1 $page}) {
      curl $i -O
    }
  }
}

###################
## Introspection ##
###################

fn my_functions { # list functions
  @ {
    awk_script = '
    /^##/ {
      if (banner == 0) { print "" };
      print "\x1b[34m" $0 "\x1b[0m";
      banner=1
    }

    /^fn (.*) \{ # (.*)$/ {
      banner=0;
      print("\x1b[31m" $2 ":\x1b[0m" substr($0, index($0, "#") + 1));
    }
    '

    awk $awk_script $home/.rc.d/0010-functions.rc
  }
}